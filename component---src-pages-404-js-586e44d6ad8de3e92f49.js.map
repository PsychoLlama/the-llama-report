{"version":3,"sources":["webpack:///./src/components/TmuxShell.js","webpack:///./src/pages/404.js"],"names":["TmuxShell","children","currentPage","links","name","target","keystack","useRef","detectWindowNavigation","useCallback","event","keyChord","getKeyChord","current","slice","concat","prefix","targetWindow","isNaN","Infinity","Number","length","navigate","useEffect","document","body","addEventListener","removeEventListener","Container","Navigation","SiteName","Links","map","link","index","NavItem","key","data-active","NavLink","to","ctrlKey","altKey","metaKey","filter","Boolean","join","styled","div","props","theme","colors","text","nav","green","background","ul","li","attrs","as","Link","BlameMongoDb","Headers","RedHighlight","Body","p","span","red"],"mappings":"2FAAA,mFAIe,SAASA,EAAT,GAA+C,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACtCC,EAAQ,CACZ,CAAEC,KAAM,OAAQC,OAAQ,KACxB,CAAED,KAAM,QAASC,OAAQ,YAGrBC,EAAWC,iBAAO,IAElBC,EAAyBC,uBAAY,SAACC,GAC1C,IAAMC,EAAWC,EAAYF,GACZ,WAAbC,IACFL,EAASO,QAAU,IAGrBP,EAASO,QAAUP,EAASO,QAAQC,OAAO,GAAGC,OAAOJ,GACrD,IAAMK,EAASV,EAASO,QAAQ,GAC1BI,EAAeC,MAAMZ,EAASO,QAAQ,IACxCM,IACAC,OAAOd,EAASO,QAAQ,IAAM,EAMlC,MAJe,WAAXG,GAAuBC,EAAed,EAAMkB,QAC9CC,YAASnB,EAAMc,GAAcZ,QAGxBiB,MACN,IASH,OAPAC,qBAAU,WAER,OADAC,SAASC,KAAKC,iBAAiB,UAAWlB,GACnC,WACLgB,SAASC,KAAKE,oBAAoB,UAAWnB,MAE9C,IAGD,kBAACoB,EAAD,KACG3B,EACD,kBAAC4B,EAAD,KACE,kBAACC,EAAD,oBAEA,kBAACC,EAAD,KACG5B,EAAM6B,KAAI,SAACC,EAAMC,GAAP,OACT,kBAACC,EAAD,CAASC,IAAKF,EAAOG,cAAanC,IAAgB+B,EAAK5B,QACrD,kBAACiC,EAAD,CAASC,GAAIN,EAAK5B,QAAS4B,EAAK7B,aAS9C,IAAMQ,EAAc,SAACF,GAQnB,MAPiB,CACfA,EAAM8B,SAAW,OACjB9B,EAAM+B,QAAU,MAChB/B,EAAMgC,SAAW,MACjBhC,EAAM0B,KAGQO,OAAOC,SAASC,KAAK,MAGjCjB,EAAYkB,IAAOC,IAAV,uEAAGD,CAAH,iHAKJ,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,QAInCtB,EAAaiB,IAAOM,IAAV,wEAAGN,CAAH,0FAEL,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAOG,SAInB,SAACL,GAAD,OAAWA,EAAMC,MAAMC,OAAOI,cAG9CvB,EAAQe,IAAOS,GAAV,mEAAGT,CAAH,kFAQLX,EAAUW,IAAOU,GAAV,qEAAGV,CAAH,8KAqBPhB,EAAWgB,YAAOX,GAASsB,MAAM,CAAEC,GAAI,MAA/B,sEAAGZ,CAAH,4GAgBRR,EAAUQ,YAAOa,KAAV,qEAAGb,CAAH,6IAQA,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,QAChB,SAACH,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,S,kCC3IzD,gGAIe,SAASS,IACtB,OACE,kBAAC,IAAD,KACE,kBAAChC,EAAD,KACE,kBAACiC,EAAD,iBACW,kBAACC,EAAD,YACT,6BAFF,2BAIE,6BAJF,2CAQA,kBAACC,EAAD,0CAMR,IAAMnC,EAAYkB,IAAOC,IAAV,oEAAGD,CAAH,wBAITe,EAAUf,IAAOkB,EAAV,kEAAGlB,CAAH,kCAKPgB,EAAehB,IAAOmB,KAAV,uEAAGnB,CAAH,iDACP,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAOgB,OAInCH,EAAOjB,IAAOkB,EAAV,+DAAGlB,CAAH","file":"component---src-pages-404-js-586e44d6ad8de3e92f49.js","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Link, navigate } from 'gatsby';\n\nexport default function TmuxShell({ children, currentPage }) {\n  const links = [\n    { name: 'Home', target: '/' },\n    { name: 'About', target: '/about/' },\n  ];\n\n  const keystack = useRef([]);\n\n  const detectWindowNavigation = useCallback((event) => {\n    const keyChord = getKeyChord(event);\n    if (keyChord === 'ctrl+b') {\n      keystack.current = [];\n    }\n\n    keystack.current = keystack.current.slice(-1).concat(keyChord);\n    const prefix = keystack.current[0];\n    const targetWindow = isNaN(keystack.current[1])\n      ? Infinity\n      : Number(keystack.current[1]) - 1;\n\n    if (prefix === 'ctrl+b' && targetWindow < links.length) {\n      navigate(links[targetWindow].target);\n    }\n\n    return navigate;\n  }, []);\n\n  useEffect(() => {\n    document.body.addEventListener('keydown', detectWindowNavigation);\n    return () => {\n      document.body.removeEventListener('keydown', detectWindowNavigation);\n    };\n  }, []);\n\n  return (\n    <Container>\n      {children}\n      <Navigation>\n        <SiteName>PsychoLlama</SiteName>\n\n        <Links>\n          {links.map((link, index) => (\n            <NavItem key={index} data-active={currentPage === link.target}>\n              <NavLink to={link.target}>{link.name}</NavLink>\n            </NavItem>\n          ))}\n        </Links>\n      </Navigation>\n    </Container>\n  );\n}\n\nconst getKeyChord = (event) => {\n  const sequence = [\n    event.ctrlKey && 'ctrl',\n    event.altKey && 'alt',\n    event.metaKey && 'cmd',\n    event.key,\n  ];\n\n  return sequence.filter(Boolean).join('+');\n};\n\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  color: ${(props) => props.theme.colors.text};\n  font-size: 16px;\n`;\n\nconst Navigation = styled.nav`\n  padding: 0.5rem;\n  color: ${(props) => props.theme.colors.green};\n  display: flex;\n  position: sticky;\n  bottom: 0;\n  background-color: ${(props) => props.theme.colors.background};\n`;\n\nconst Links = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style-type: none;\n  display: flex;\n  counter-set: nav-link 0;\n`;\n\nconst NavItem = styled.li`\n  margin: 0 1ch;\n\n  ::first-child {\n    margin-left: 0;\n  }\n\n  ::before {\n    content: counter(nav-link) ':';\n    counter-increment: nav-link;\n  }\n\n  &[data-active='true'] {\n    margin-right: 0;\n\n    ::after {\n      content: '*';\n    }\n  }\n`;\n\nconst SiteName = styled(NavItem).attrs({ as: 'p' })`\n  margin: 0;\n\n  ::before {\n    content: '[';\n  }\n\n  ::after {\n    content: ']';\n  }\n\n  @media screen and (max-width: 640px) {\n    display: none;\n  }\n`;\n\nconst NavLink = styled(Link)`\n  cursor: pointer;\n  border-bottom: 1px solid transparent;\n  color: inherit;\n  text-decoration: none;\n\n  :hover,\n  :focus {\n    color: ${(props) => props.theme.colors.text};\n    border-bottom-color: ${(props) => props.theme.colors.text};\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport TmuxShell from '../components/TmuxShell';\n\nexport default function BlameMongoDb() {\n  return (\n    <TmuxShell>\n      <Container>\n        <Headers>\n          HTTP/1.1 <RedHighlight>404</RedHighlight>\n          <br />\n          Server: bash/2.03 (Unix)\n          <br />\n          Content-Type: text/plain; charset=ascii\n        </Headers>\n\n        <Body>cat: no such file or directory.</Body>\n      </Container>\n    </TmuxShell>\n  );\n}\n\nconst Container = styled.div`\n  padding: 1rem 2rem;\n`;\n\nconst Headers = styled.p`\n  margin: 0;\n  line-height: 1.4rem;\n`;\n\nconst RedHighlight = styled.span`\n  color: ${(props) => props.theme.colors.red};\n  text-decoration: underline dashed;\n`;\n\nconst Body = styled.p`\n  white-space: pre;\n`;\n"],"sourceRoot":""}